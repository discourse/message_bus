name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }} (redis ${{ matrix.redis }})
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: message_bus_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: ${{ format('redis:{0}', matrix.redis) }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        ruby: [2.6, 2.7, 3.0]
        redis: [5, 6]

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm

      - name: Setup npm
        run: npm install

      - name: Tests
        run: bundle exec rake
        timeout-minutes: 3

      - name: Linting
        run: npx eslint .

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Release gem
        uses: discourse/publish-rubygems-action@v2
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
          GIT_EMAIL: team@discourse.org
          GIT_NAME: discoursebot

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
